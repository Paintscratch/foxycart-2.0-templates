<!DOCTYPE html>
<html id="fc" lang={{ language_iso_code }}>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

    <title>{{ config.store_name }} Secure Checkout</title>
    <link rel="icon" type="image/x-icon" href="https://www.paintscratch.com/content/images/favicons/favicon.ico">

    <meta name="viewport" content="width=device-width, initial-scale=1, minimal-ui">

    {% for css_file_href in config.css_files %}
        <link href="{{ css_file_href }}" rel="stylesheet" media="screen">
    {% endfor %}

    <link rel="stylesheet"
          href="{{ config.template_config.custom_config.ps_domain }}/shop/foxycart_templates/styles/ps-foxycart-styles.css?v={{ "now"|date("U") }}">

    {{ fc_header_content|raw }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-modal/0.9.1/jquery.modal.min.css"/>
</head>
<body class="ps-foxy">
{% include 'svg.inc.twig' %}
<div class="fc-container ps-logo-container">
    <img id="fc-logo" src="{{ config.cache_path }}{{ config.store_logo_url }}" class="fc-logo__image"
         alt="{{ store_name }}">
    <h1 class="fc-checkout-title">Secure Checkout</h1>
</div>

{% import "utils.inc.twig" as utils %}

{% embed 'checkout.inc.twig' %}
    {% block logo %}{% endblock %}

    {% block submit_button %}
        {{ parent() }}
        <div class="ps-trust-badges">
            <img id="ps-color-match-badge" src="/shop/foxycart_templates/images/colormatch.png" alt="Color Match Guaranteed" title="Your paint will match your car's original color or we'll make it right">
            <img id="ps-reviews-badge" src="/shop/foxycart_templates/images/reviews.png" alt="Verified reviews on Google badge" title="Trusted by thousands of real customers - see why 3,031+ buyers rate us highly.">
            <img id="ps-security-badge" src="/shop/foxycart_templates/images/security.png" alt="Your payment is protected badge" title="Your payment is protected with 256-bit SSL encryption for complete safety">
        </div>
    {% endblock %}
{% endembed %}

<div id="ps-color-match-modal" class="modal ps-modal" aria-labelledby="ps-color-match-title" role="dialog">
    <h5 id="ps-color-match-title">Color Match Guarantee</h5>
    <p>
        We guarantee our paint will match the original color... or we will send you a new order!
        We mix paint based on the original color provided by your vehicle's manufacturer.
        If your paint is old or faded, it may differ from the original color. We recommend ordering
        a small quantity of paint to check the match first.
    </p>
    <h6>Custom Matching Services</h6>
    <p>
        If your paint has faded over time, or you're unsure of your color, PaintScratch offers custom
        matching services. Our experts can duplicate nearly any color on any surface! If you choose to
        have a custom match, you'll need to send us a painted part at least 2" square.
        <a href="https://www.paintscratch.com/products/custom.html" target="_blank">Learn more &gt;</a>
    </p>

    <div style="margin-top:15px; text-align:right;">
        <button type="button" class="btn btn-default" data-ps-close>Close</button>
    </div>

</div>

{% set ps_google_reviews_url = "https://google.com/m/storepages?q=paintscratch.com&c=US&rf=FIVE_STARS#reviews" %}
{% set ps_google_reviews_title = "Click to read the reviews in a new window." %}


<div id="ps-reviews-modal" class="modal ps-modal" aria-labelledby="ps-reviews-title" role="dialog">
    <h5 id="ps-reviews-title">Over 3,031 Five-Star Reviews</h5>
    <p>
        PaintScratch customers have left <strong>3,031 five-star reviews (and counting)</strong> on Google.
    </p>
    <p>
        They praise our accurate color matching, fast shipping, and reliable service.
    </p>
    <p>
    <img src="/shop/foxycart_templates/images/paintscratch-shop-image-800x400.jpg" alt="Paintscratch technician mixing fresh paint">
    </p>
    <a href="{{ ps_google_reviews_url }}" target="_blank" title="{{ ps_google_reviews_title }}" rel="noopener noreferrer">
        <img src="/shop/foxycart_templates/images/reviews.png"
             alt="Google Five Star Reviews Badge"
                               style="max-width:160px;"></a>
    <h6>
        <a href="{{ ps_google_reviews_url }}" target="_blank" title="{{ ps_google_reviews_title }}" rel="noopener noreferrer">
            Read all 3,031+ five-star Google reviews ›
        </a>
    </h6>

    <div style="margin-top:15px; text-align:right;">
        <button type="button" class="btn btn-default" data-ps-close>Close</button>
    </div>

</div>



<div id="ps-security-modal" class="modal ps-modal" aria-labelledby="ps-security-modal-title" role="dialog">
    <h5 id="ps-security-modal-title">Safe and Secure Checkout</h5>
    <p>
        PaintScratch uses 256-bit encryption to protect your personal and financial information. It is the gold
        standard for online security, used by governments and financial institutions. This means you can checkout without worry!
    </p>
    <p>
        256-bit encryption is highly resistant to current and near-future attacks, including from quantum computing.
        It scrambles data using an immense number of possible keys (about 1.1 with 77 zeros after it), making it
        virtually impossible to hack.
    </p>

    <div style="margin-top:15px; text-align:right;">
        <button type="button" class="btn btn-default" data-ps-close>Close</button>
    </div>
</div>


<div id="ps-confirm-cancel-modal" class="modal">
    <h5>Leave checkout to edit your cart?</h5>
    <div class="modal-buttons">
        <a href="#" id="ps-confirm-cancel-no" class="btn btn-primary">Continue checkout</a>
        <a href="#" id="ps-confirm-cancel-yes" class="btn btn-default">Edit my cart</a>
    </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-modal/0.9.1/jquery.modal.min.js"></script>

<script>
    /** Hide Foxy’s top error banner until a real submit/express-pay attempt.
     Re-enable it (and aria-live) on first attempt to avoid constant warnings. */
    (function () {
        var root = document.getElementById('fc') || document.body;
        var notifierSel = '[data-fc-error-notifier]';

        // Prevent screenreader spam until an attempt
        var n0 = root.querySelector(notifierSel);
        if (n0) n0.setAttribute('aria-live', 'off');

        var attempted = false;

        function allowGlobalErrors() {
            if (attempted) return;
            attempted = true;
            root.classList.add('fc-show-errors');
            // Restore polite announcements
            var n = root.querySelector(notifierSel);
            if (n) n.setAttribute('aria-live', 'polite');
        }

        // Treat these as "attempt to submit"
        var triggers = [
            'button[type="submit"]',
            '.fc-button--submit',
            '[data-fc-place-order]',
            '[data-fc-paypal-button]',
            '[data-fc-amazonpay-button]',
            '[data-fc-venmo-button]'
        ].join(',');

        document.addEventListener('click', function (e) {
            if (e.target.closest(triggers)) allowGlobalErrors();
        }, true);

        // Keyboard submit (Enter)
        document.addEventListener('keydown', function (e) {
            if (e.key === 'Enter') allowGlobalErrors();
        }, true);
    })();

    // Trust badges javascript
    // Open security modal when the badge is clicked
    $(document).on('click', '#ps-security-badge', function (e) {
        e.preventDefault();
        if ($.modal) {
            $('#ps-security-modal').modal();
        } else {
            console.error('jQuery Modal not loaded; security modal will not open.');
        }
    });

    // Open reviews modal when the badge is clicked
    $(document).on('click', '#ps-reviews-badge', function (e) {
        e.preventDefault();
        if ($.modal) {
            $('#ps-reviews-modal').modal();
        } else {
            console.error('jQuery Modal not loaded; reviews modal will not open.');
        }
    });


    // Open color match modal when the badge is clicked
    $(document).on('click', '#ps-color-match-badge', function (e) {
        e.preventDefault();
        if ($.modal) {
            $('#ps-color-match-modal').modal();
        } else {
            console.error('jQuery Modal not loaded; color match modal will not open.');
        }
    });

    // Works for any button or link with data-ps-close inside a .ps-modal
    $(document).on('click', '.ps-modal [data-ps-close]', function (e) {
        e.preventDefault();
        if ($.modal) $.modal.close();
    });



</script>

{% include template_from_string(fc_footer_content) %}
{% set warning_threshold = config.template_config.custom_config.fraud_amount_threshold %}
<script>
    (function ($, FC) {
        "use strict";

        // 1) High-value billing warning
        function checkBillingAddressWarning() {
            if (!FC.json || !FC.json.total_order) return;
            var threshold = {{ warning_threshold }};
            var useDifferent = $('#use_different_addresses').is(':checked');
            var total = FC.json.total_order;
            var $container = $('#billing-address-warning-container');

            // inject container if missing
            if (!$container.length) {
                $container = $('<div id="billing-address-warning-container" style="display:none"></div>');
                var $billingFs = $('fieldset[data-fc-id="billing_address"]');
                if ($billingFs.length) {
                    $billingFs.before($container);
                } else {
                    $('#use_different_addresses').closest('label').after($container);
                }
            }

            // show or hide warning
            if (useDifferent && total > threshold) {
                var msg = ''
                    + '<div class="fc-alert fc-alert--warning" role="alert">'
                    + '<p style="margin:0;">'
                    + 'Use PayPal, Amazon Pay, or Apple Pay for different billing/shipping addresses. '
                    + 'Credit cards may require additional verification.'
                    + '</p>'
                    + '</div>';
                if (!$container.is(':visible')) {
                    $container.html(msg).slideDown('fast');
                }
            } else if ($container.is(':visible')) {
                $container.slideUp('fast', function () {
                    $(this).empty();
                });
            }
        }

        // 2) Fire on FoxyCart load
        FC.onLoad = function () {
            FC.client.on('ready.done', function () {
                // Capture the session ID and store it globally
                window.foxySessionId = FC.json.session_id || null;

                // A) Rename the “— or —” line
                $('.fc-action--payment--or').text('Express checkout');

                // B) Move express buttons above the email fieldset
                var $express = $('#fc-checkout__section--express-options');
                var $fieldset = $('#fc-checkout__section--email fieldset#fc-email');
                if ($express.length && $fieldset.length) {
                    $express.insertBefore($fieldset);
                    setTimeout(function () {
                        $express.addClass('positioned');
                        // inject divider right below the express block
                        var $divider = $(
                            '<div class="fc-divider">' +
                            '<span class="fc-divider__line"></span>' +
                            '<span class="fc-divider__text">OR</span>' +
                            '<span class="fc-divider__line"></span>' +
                            '</div>'
                        );
                        if (!$express.next().is('.fc-divider')) {
                            $express.after($divider);
                        }
                    }, 10);
                } else {
                    console.warn('Express options or email fieldset not found');
                }

                // C) Initial billing warning + listen for address changes
                checkBillingAddressWarning();
                $(document).on('change', '#use_different_addresses', function () {
                    setTimeout(checkBillingAddressWarning, 100);
                });

                // D) “Cancel” modal logic
                if (!$.modal) {
                    console.error('jQuery Modal not loaded; cancel modal won’t work.');
                } else {
                    // pick the built-in cancel link by its cancel-button class
                    var $cancelLink = $('a.fc-button--cancel');

                    if (!$cancelLink.length) {
                        console.error('Cancel-checkout link (fc-button--cancel) not found.');
                    } else {
                        // Open the dialog
                        $cancelLink.on('click', function (e) {
                            e.preventDefault();
                            $('#ps-confirm-cancel-modal').modal();
                        });

                        // “No, continue checkout” inside the modal just closes it
                        $('#ps-confirm-cancel-no').on('click', function (e) {
                            e.preventDefault();
                            $.modal.close();
                        });

                        // “Yes, edit my cart” does the navigation then hides
                        $('#ps-confirm-cancel-yes').on('click', function (e) {
                            e.preventDefault();
                            // close the modal cleanly
                            $.modal.close();

                            // Build cart URL with session preservation
                            var cartUrl = '{{ config.template_config.custom_config.ps_domain }}/cgi-bin/shopping-cart.cgi';
                            if (window.foxySessionId) {
                                cartUrl += '?fcsid=' + encodeURIComponent(window.foxySessionId);
                            }

                            // send them straight to your cart URL
                            window.location.href = cartUrl;
                        });
                    }
                }

                // =============================================
                // E) HIDE AMAZON PAY MICRO-TEXT (NEW CODE)
                // =============================================
                function hideAmazonMicroText() {
                    // 1. Find the host element that contains the Shadow DOM
                    const amazonButtonHost = document.querySelector('#amazon-pay-button');

                    // 2. Check if the host and its shadowRoot exist
                    if (amazonButtonHost && amazonButtonHost.shadowRoot) {
                        // 3. Query *inside* the Shadow DOM for the element to hide
                        const microtextView = amazonButtonHost.shadowRoot.querySelector('.amazonpay-button-view3');

                        // 4. If the element is found and is not already hidden, hide it.
                        if (microtextView && microtextView.style.display !== 'none') {
                            microtextView.style.display = 'none';
                        }
                    }
                }

                // Create an observer to watch for when the Amazon button is added to the page
                const observer = new MutationObserver(function () {
                    // When any change happens on the page, try to run our function
                    hideAmazonMicroText();
                });

                // Start observing the main checkout container for any additions/changes
                observer.observe(document.body, {
                    childList: true,
                    subtree: true
                });

                // Run the function once on initial load just in case
                hideAmazonMicroText();
            });

            // F) Also re-check billing warning on cart updates
            FC.client.on('cart-update', checkBillingAddressWarning);

            // MOBILE: class-toggle collapse of only the items block
            if (window.matchMedia('(max-width:767px)').matches) {
                var $wrap = $('#fc-cart--fixed-width');
                var $toggle = $('#ps-toggle-products');

                $toggle.on('click', function () {
                    $wrap.toggleClass('expanded');
                    var txt = $wrap.hasClass('expanded')
                        ? 'Hide items'
                        : 'Review items';

                    // Update text content only, not the entire button
                    $(this).find('.toggle-text').text(txt);

                    // Toggle the expanded class on the button for chevron rotation
                    $(this).toggleClass('expanded');
                });
            }

        };

    })(jQuery, FC);
</script>
</body>
</html>