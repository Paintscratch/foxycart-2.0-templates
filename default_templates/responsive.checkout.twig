<!DOCTYPE html>
<html id="fc" lang={{ language_iso_code }}>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

    <title>{{ config.store_name }} Secure Checkout</title>

    <meta name="viewport" content="width=device-width, initial-scale=1, minimal-ui">

    {% for css_file_href in config.css_files %}
        <link href="{{ css_file_href }}" rel="stylesheet" media="screen">
    {% endfor %}

    <link rel="stylesheet"
          href="{{ config.template_config.custom_config.ps_domain }}/shop/foxycart_templates/styles/ps-foxycart-styles.css">

    {{ fc_header_content|raw }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-modal/0.9.1/jquery.modal.min.css"/>
</head>
<body class="ps-foxy">
{% include 'svg.inc.twig' %}
<div class="fc-container ps-logo-container">
    <img id="fc-logo" src="{{ config.cache_path }}{{ config.store_logo_url }}" class="fc-logo__image"
         alt="{{ store_name }}">
    <h1 class="fc-checkout-title">Secure Checkout</h1>
</div>

{% import "utils.inc.twig" as utils %}
{% embed 'checkout.inc.twig' %}
    {# You can override blocks within checkout.inc.twig here if needed #}
    {# For example, to ensure the fc-cancel-continue-shopping div has a unique ID or a link with an ID if it doesn't already: #}
    {# {% block block_name_containing_cancel_link %}
            <div class="fc-cancel-continue-shopping">
                <a href="{{ cart_cancel_and_continue_link }}" id="ps-cancel-checkout-link" class="fc-button fc-button--minor fc-button--cancel">
                    <span class="fc-icon">
                        <svg class="fc-svg-icon fc-svg-icon--angle-double-left" aria-hidden="true" role="img" focusable="false"> <use xlink:href="#fc-icon-angle-double-left"></use> </svg>
                    </span>
                    <span>{{ lang.cart_continue_shopping }}</span>
                </a>
            </div>
        {% endblock %} #}
    {% block logo %}
    {% endblock %}


{% endembed %}

<div id="ps-confirm-cancel-modal" class="modal">
    <h5>Return to shopping? Your cart will be saved.</h5>
    <div class="modal-buttons">
        <a href="#" rel="modal:close" class="btn btn-primary">Continue Checkout</a>
        <a href="#" id="ps-confirm-cancel-yes" class="btn">Return to Shop</a>
    </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-modal/0.9.1/jquery.modal.min.js"></script>

{% include template_from_string(fc_footer_content) %}
{% set warning_threshold = config.template_config.custom_config.fraud_amount_threshold %}
<script>
    (function($, FC) {

        /**
         * Checks if the warning for high-value orders with different billing
         * addresses should be displayed and updates the DOM accordingly.
         */
        function checkBillingAddressWarning() {
            if (!FC.json || !FC.json.total_order) {
                return; // Exit if FoxyCart data isn't ready
            }

            var threshold = {{ warning_threshold }};
            var useDifferentBilling = $('#use_different_addresses').is(':checked');
            var orderTotal = FC.json.total_order;
            var $container = $('#billing-address-warning-container');

            // Create the warning container if it doesn't exist
            if ($container.length === 0) {
                $container = $('<div id="billing-address-warning-container" style="display: none;"></div>');
                var $billingAddressFieldset = $('fieldset[data-fc-id="billing_address"]');
                if ($billingAddressFieldset.length) {
                    $billingAddressFieldset.before($container);
                } else {
                    // Fallback: insert after the checkbox if billing fieldset not found
                    $('#use_different_addresses').closest('label').after($container);
                }
            }

            // Show or hide the warning message
            if (useDifferentBilling && orderTotal > threshold) {
                var message =
                    '<div class="fc-alert fc-alert--warning" role="alert">' +
                    '<p style="margin:0;">Use PayPal, Amazon Pay, or Apple Pay for different billing/shipping addresses. Credit cards may require additional verification.</p>' +
                    '</div>';

                if (!$container.is(':visible')) {
                    $container.html(message).slideDown('fast');
                }
            } else {
                if ($container.is(':visible')) {
                    $container.slideUp('fast', function() { $(this).empty(); });
                }
            }
        }

        var FC = FC || {};
        FC.onLoad = function() {
            // This event fires once FoxyCart and all its data is ready on the page.
            FC.client.on('ready.done', function() {

                // --- Initial check on page load ---
                checkBillingAddressWarning();

                // --- Listen for checkbox changes directly ---
                $(document).on('change', '#use_different_addresses', function() {
                    // Small delay to ensure any related FoxyCart processing is complete
                    setTimeout(checkBillingAddressWarning, 100);
                });

                // --- Your Cancel Modal Logic (Unchanged) ---
                if (typeof $.modal == 'undefined') {
                    console.error("jQuery Modal is not loaded. Cannot initialize modal.");
                    return;
                }
                var $cancelLink = $('.fc-cancel-continue-shopping a').first();
                if (!$cancelLink.attr('id')) {
                    $cancelLink.attr('id', 'fc-generated-cancel-link');
                }
                $cancelLink.on('click', function(event) {
                    event.preventDefault();
                    $('#ps-confirm-cancel-modal').modal();
                });
                $('#ps-confirm-cancel-yes').on('click', function(event) {
                    event.preventDefault();
                    var fallbackUrl = FC.json.cart_cancel_and_continue_link || FC.json.config.store_url || '/';
                    if (document.referrer === "" || (history.length !== undefined && history.length <= 2)) {
                        window.location.href = fallbackUrl;
                    } else {
                        history.back(-1);
                    }
                    $.modal.close();
                });
            });

            // --- Keep this for when cart totals change (coupons, etc.) ---
            FC.client.on('cart-update', function() {
                checkBillingAddressWarning();
            });

        };

    })(jQuery, FC);
</script>

</body>
</html>